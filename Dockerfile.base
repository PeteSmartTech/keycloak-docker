# First stage: Build Keycloak
FROM quay.io/keycloak/keycloak:latest as builder

# Enable health and metrics support
ENV KC_HEALTH_ENABLED=true
ENV KC_METRICS_ENABLED=true

# Configure a database vendor and transaction settings
ENV KC_DB=postgres
ENV KC_TRANSACTION_XA_ENABLED=false

# Configure hostname
ENV KC_HOSTNAME_STRICT=true
ENV KC_HOSTNAME_STRICT_BACKCHANNEL=true
ENV KC_PROXY=edge

WORKDIR /opt/keycloak

# Copy pre-generated certificates
COPY ./certs/server.crt /opt/keycloak/conf/server.crt
COPY ./certs/server.key /opt/keycloak/conf/server.key
COPY ./certs/server.keystore /opt/keycloak/conf/server.keystore

# Fix permissions (Keycloak runs as user 1000)
USER root
RUN chown 1000:0 /opt/keycloak/conf/server.crt \
    && chown 1000:0 /opt/keycloak/conf/server.key \
    && chown 1000:0 /opt/keycloak/conf/server.keystore \
    && chmod 644 /opt/keycloak/conf/server.crt \
    && chmod 600 /opt/keycloak/conf/server.key \
    && chmod 600 /opt/keycloak/conf/server.keystore

# Switch back to Keycloak user
USER 1000

# Build Keycloak
RUN /opt/keycloak/bin/kc.sh build

# Second stage: Create final production image
FROM quay.io/keycloak/keycloak:latest

# Copy from builder stage
COPY --from=builder /opt/keycloak/ /opt/keycloak/

# Set runtime environment variables
ENV KC_HTTP_ENABLED=false
ENV KC_HTTPS_PORT=443

# Production optimized startup command with TLS enabled
ENTRYPOINT ["/opt/keycloak/bin/kc.sh", "start", "--optimized", "--https-certificate-file=/opt/keycloak/conf/server.crt", "--https-certificate-key-file=/opt/keycloak/conf/server.key"]